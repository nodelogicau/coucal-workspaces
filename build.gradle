import com.github.jk1.license.render.InventoryHtmlReportRenderer

import java.time.Year

plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.jk1.dependency-license-report' version '2.9'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    implementation libs.spring.boot.web, libs.spring.boot.json, libs.ical4j.connector,
            libs.ical4j.serializer, libs.ical4j.integration.mail, libs.angus.mail,
            libs.slugify, libs.prettytime,
            libs.sqlite, libs.hibernate.community.dialects, libs.spring.boot.data.jpa,
            libs.rome, libs.jsoup,
            libs.smack, libs.smack.extensions, libs.smack.im, libs.smack.tcp,
            libs.html.sanitizer

    implementation(libs.ical4j) {
        capabilities {
            requireCapability("org.mnode.ical4j:ical4j-filter-expressions")
        }
    }

    runtimeOnly libs.spring.boot.thymeleaf, libs.thymeleaf.layout, libs.spring.boot.actuator,
//            libs.spring.boot.security,
            libs.spring.boot.devtools, libs.webjars, libs.htmx,
            libs.flowbite, libs.tiptap, libs.simple.datatables, libs.ical4j.template

    testImplementation platform(libs.spock.bom), libs.spock.core, libs.spring.boot.test
}

sourceCompatibility = JavaVersion.VERSION_17

test {
    useJUnitPlatform()
}

application {
    mainClass = 'au.nodelogic.coucal.workspaces.WorkspacesMain'

    applicationDefaultJvmArgs = ['-Djava.awt.headless=false']
}

startScripts {
    applicationName = 'coucal'
    classpath = files('lib/*')
}

license {
    header = project.file('HEADER.txt')
//    skipExistingHeaders = true
//    include '**/*.java,**/*.html'
    properties {
        year = Year.now().value
    }
}

licenseReport {
    unionParentPomLicenses = false
    renderers = [new InventoryHtmlReportRenderer()]
}
